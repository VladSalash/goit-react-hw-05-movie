{"version":3,"file":"static/js/483.ab4740b6.chunk.js","mappings":"4SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,GAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAa,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,GAAAA,IAAA,iBAAoBO,EAApB,oBAAwCN,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbI,EAAY,mCAAG,WAAMD,GAAN,uFACHP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACiBN,IAFd,cACpBE,EADoB,yBAInBA,EAASC,KAAKK,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACiBN,IAFX,cACvBE,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfM,EAAiB,mCAAG,WAAMC,GAAN,uFACRZ,EAAAA,GAAAA,IAAA,gCACIC,EADJ,kBACqBW,EADrB,+CADQ,cACzBT,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,kKC7BjBQ,EAAkBC,EAAAA,GAAAA,IAAH,0CAGfC,EAAaD,EAAAA,GAAAA,GAAH,+CAGVE,EAAUF,EAAAA,GAAAA,GAAH,4HAMPG,EAAeH,EAAAA,GAAAA,GAAH,+CAIZI,EAAcJ,EAAAA,GAAAA,EAAH,4C,SChBT,SAASK,EAAT,GAA0C,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC3C,OACE,UAACL,EAAD,YACE,SAACC,EAAD,UAAeG,KACf,SAACF,EAAD,UAAcG,MAFFD,EAKjB,CCFc,SAASE,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,SAACV,EAAD,WACE,SAACE,EAAD,UACGQ,EAAQC,KAAI,gBAAGJ,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,SAACF,EAAD,CAAyBC,OAAQA,EAAQC,QAASA,GAAjCD,EADN,OAMpB,C,aCRKK,G,OACE,QADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGG,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRD,EAAUP,GAEV,IAAMS,EAAiB,mCAAG,8GAEKxB,EAAAA,EAAAA,IAAgBiB,GAFrB,UAIM,KAFtBQ,EAFgB,QAILC,OAJK,uBAKpBJ,EAAUP,GALU,0BAStBO,EAAUP,GACVK,EAAWK,GAVW,yDAYtBH,EAAUP,GAZY,kBAafY,EAAAA,GAAAA,MAAA,mCAbe,0DAAH,qDAgBvBH,GACD,GAAE,CAACP,KAGF,2BACGI,IAAWN,IACV,qEAGDF,IAAW,SAACD,EAAD,CAAYC,QAASA,MAGtC,C","sources":["api/api.js","components/Review/ReviewCard.styled.js","components/Review/ReviewItem.jsx","components/Review/ReviewCard.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '9e618eee0b448f62a9e21dcfe5288ef5';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`/movie/${moviesId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByKeyWord = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nexport const ReviewContainer = styled.div`\n  padding: 40px;\n`;\nexport const ReviewList = styled.ul`\n  padding-left: 20px;\n`;\nexport const RevItem = styled.li`\n  border: 1px solid #ffffff2b;\n  margin-bottom: 20px;\n  line-height: 1.7;\n  padding: 30px 40px;\n`;\nexport const ReviewsTitle = styled.h1`\n  text-align: center;\n`;\n\nexport const ReviewsText = styled.p`\n  font-size: 14px;\n`;\n","import { RevItem, ReviewsTitle, ReviewsText } from './ReviewCard.styled.js';\nexport default function ReviewItem({ author, content }) {\n  return (\n    <RevItem key={author}>\n      <ReviewsTitle>{author}</ReviewsTitle>\n      <ReviewsText>{content}</ReviewsText>\n    </RevItem>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReviewItem from './ReviewItem.jsx';\n\nimport { ReviewContainer, ReviewList } from './ReviewCard.styled.js';\n\nexport default function ReviewCard({ reviews }) {\n  return (\n    <ReviewContainer>\n      <ReviewList>\n        {reviews.map(({ author, content }) => (\n          <ReviewItem key={author} author={author} content={content} />\n        ))}\n      </ReviewList>\n    </ReviewContainer>\n  );\n}\n\nReviewCard.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieReviews } from '../api/api.js';\nimport { useParams } from 'react-router-dom';\nimport ReviewCard from '../components/Review/ReviewCard';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    const fetchMovieReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(movieId);\n\n        if (movieReviews.length === 0) {\n          setStatus(Status.IDLE);\n          return;\n        }\n\n        setStatus(Status.RESOLVED);\n        setReviews(movieReviews);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        return toast.error(`Whoops something went wrong...`);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === Status.IDLE && (\n        <h1>We dont have any reviews for this movie </h1>\n      )}\n\n      {reviews && <ReviewCard reviews={reviews} />}\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","getMoviesById","moviesId","getMovieCast","cast","getMovieReviews","getMovieByKeyWord","searchQuery","ReviewContainer","styled","ReviewList","RevItem","ReviewsTitle","ReviewsText","ReviewItem","author","content","ReviewCard","reviews","map","Status","Reviews","movieId","useParams","useState","setReviews","status","setStatus","useEffect","fetchMovieReviews","movieReviews","length","toast"],"sourceRoot":""}