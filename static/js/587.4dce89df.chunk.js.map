{"version":3,"file":"static/js/587.4dce89df.chunk.js","mappings":"4SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,GAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAa,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,GAAAA,IAAA,iBAAoBO,EAApB,oBAAwCN,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbI,EAAY,mCAAG,WAAMD,GAAN,uFACHP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACiBN,IAFd,cACpBE,EADoB,yBAInBA,EAASC,KAAKK,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACiBN,IAFX,cACvBE,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfM,EAAiB,mCAAG,WAAMC,GAAN,uFACRZ,EAAAA,GAAAA,IAAA,gCACIC,EADJ,kBACqBW,EADrB,+CADQ,cACzBT,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,oKC5BjBQ,EAAgBC,EAAAA,GAAAA,IAAH,4CAIbC,EAAWD,EAAAA,GAAAA,GAAH,0FAMRE,EAAWF,EAAAA,GAAAA,GAAH,2QAiBRG,EAAUH,EAAAA,GAAAA,IAAH,gFAIPI,EAAeJ,EAAAA,GAAAA,EAAH,oEAKZK,EAAoBL,EAAAA,GAAAA,EAAH,4C,SC7Bf,SAASM,EAAT,GAAgE,IAA3CC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UAI/D,OACE,UAACR,EAAD,YACE,SAACC,EAAD,CACEQ,IAAI,GACJC,IAAKJ,EAAY,UAPF,mCAOE,OAAqBA,GAArB,UALrB,wEAMIK,MAAM,MACNC,OAAO,SAET,SAACV,EAAD,UAAeK,KACf,UAACJ,EAAD,YACE,sCADF,IACqBK,OATRH,EAalB,CCvBc,SAASQ,EAAT,GAA6B,IAATpB,EAAQ,EAARA,KACjC,OACE,SAACI,EAAD,WACE,SAACE,EAAD,UACGN,EAAKqB,KAAI,gBAAGT,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACR,SAACJ,EAAD,CAEEE,aAAcA,EACdC,KAAMA,EACNC,UAAWA,GAHNH,EAFC,OAWjB,C,aCTKU,G,OACE,QADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGG,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAO1B,EAAP,KAAa2B,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRD,EAAUP,GAEV,IAAMS,EAAc,mCAAG,8GAEKhC,EAAAA,EAAAA,IAAayB,GAFlB,UAIM,KAFnBQ,EAFa,QAILC,OAJK,uBAKjBJ,EAAUP,GALO,0BASnBO,EAAUP,GACVK,EAAQK,GAVW,yDAYnBH,EAAUP,GAZS,kBAaZY,EAAAA,GAAAA,MAAA,mCAbY,0DAAH,qDAgBpBH,GACD,GAAE,CAACP,KAGF,2BACGI,IAAWN,IAAe,kEAC1BtB,IAAQ,SAACoB,EAAD,CAAUpB,KAAMA,MAG9B,C","sources":["api/api.js","components/Cast/CastCard.styled.js","components/Cast/CastItem.jsx","components/Cast/CastCard.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '9e618eee0b448f62a9e21dcfe5288ef5';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`/movie/${moviesId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByKeyWord = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  padding: 40px 0;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  font-size: 16px;\n  color: #ffffffbd;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  width: 200px;\n  transition: transform 150ms linear;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  &:nth-child(5n) {\n    margin-right: 0;\n  }\n`;\n\nexport const CastImg = styled.img`\n  border: 0.5px solid #ffffff2b;\n  object-fit: cover;\n`;\nexport const CastTextName = styled.p`\n  margin-bottom: 5px;\n  font-weight: 700;\n`;\n\nexport const CastTextCharacter = styled.p`\n  font-size: 13px;\n`;\n","import React from 'react';\n\nimport {\n  CastItem,\n  CastImg,\n  CastTextName,\n  CastTextCharacter,\n} from './CastCard.styled.js';\n\nexport default function CastItems({ cast_id, profile_path, name, character }) {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w200';\n  const DEFAULT_IMG =\n    'https://www.pngkey.com/png/full/121-1219231_user-default-profile.png';\n  return (\n    <CastItem key={cast_id}>\n      <CastImg\n        alt=\"\"\n        src={profile_path ? `${BASE_IMG_URL}${profile_path}` : `${DEFAULT_IMG}`}\n        width=\"200\"\n        height=\"300\"\n      />\n      <CastTextName>{name}</CastTextName>\n      <CastTextCharacter>\n        <b>Character:</b> {character}\n      </CastTextCharacter>\n    </CastItem>\n  );\n}\n","import React from 'react';\nimport { CastContainer, CastList } from './CastCard.styled.js';\nimport CastItems from './CastItem.jsx';\n\nexport default function CastCard({ cast }) {\n  return (\n    <CastContainer>\n      <CastList>\n        {cast.map(({ cast_id, profile_path, name, character }) => (\n          <CastItems\n            key={cast_id}\n            profile_path={profile_path}\n            name={name}\n            character={character}\n          />\n        ))}\n      </CastList>\n    </CastContainer>\n  );\n}\n","import React from 'react';\n\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from '../api/api.js';\nimport { useParams } from 'react-router-dom';\nimport CastCard from '../components/Cast/CastCard';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    const fetchMovieCast = async () => {\n      try {\n        const movieCast = await getMovieCast(movieId);\n\n        if (movieCast.length === 0) {\n          setStatus(Status.IDLE);\n          return;\n        }\n\n        setStatus(Status.RESOLVED);\n        setCast(movieCast);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        return toast.error(`Whoops something went wrong...`);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === Status.IDLE && <h1>We dont have any cast for this movie </h1>}\n      {cast && <CastCard cast={cast} />}\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","getMoviesById","moviesId","getMovieCast","cast","getMovieReviews","getMovieByKeyWord","searchQuery","CastContainer","styled","CastList","CastItem","CastImg","CastTextName","CastTextCharacter","CastItems","cast_id","profile_path","name","character","alt","src","width","height","CastCard","map","Status","Cast","movieId","useParams","useState","setCast","status","setStatus","useEffect","fetchMovieCast","movieCast","length","toast"],"sourceRoot":""}