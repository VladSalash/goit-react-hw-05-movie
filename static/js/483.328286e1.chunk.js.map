{"version":3,"file":"static/js/483.328286e1.chunk.js","mappings":"4SAEMA,EAAU,mCACVC,EAAQ,+BAEP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACQC,EAAAA,EAAAA,IAAM,GAAD,OACbF,EADa,uCAC0BD,EAD1B,YADb,0GAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFACQF,EAAAA,EAAAA,IAAM,GAAD,OACbF,EADa,iCACoBD,EADpB,kBACqCK,EADrC,YADb,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFACQJ,EAAAA,EAAAA,IAAM,GAAD,OACbF,EADa,kBACKM,EADL,oBACyBP,EADzB,oBADb,0GAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,kFACQJ,EAAAA,EAAAA,IAAM,GAAD,OACbF,EADa,kBACKM,EADL,4BACiCP,EADjC,oBADb,0GAMA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,kFACQJ,EAAAA,EAAAA,IAAM,GAAD,OACbF,EADa,kBACKM,EADL,4BACiCP,EADjC,2BADb,0G,iIC3BMU,EAAOC,EAAAA,GAAAA,KAAH,+C,GAIOA,EAAAA,GAAAA,GAAH,yC,QCLN,SAASC,EAAT,GAA+C,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAChD,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EAKZ,CCFc,SAASG,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OAAOA,EAAQC,OAAS,GACtB,+BACE,wBACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,SAACR,EAAD,CAEEE,OAAQM,EAAON,OACfC,QAASK,EAAOL,SAFXK,EAAOC,GAFG,SAUvB,SAACX,EAAD,qDAEH,CCjBc,SAASY,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAkBc,GAASK,MAAK,SAAAC,GAC9BH,EAAWG,EAAIC,KAAKC,QACrB,GACF,GAAE,CAACR,KAEG,8BAAGN,IAAW,SAACD,EAAD,CAAYC,QAASA,KAC3C,C","sources":["api/api.js","components/Review/ReviewCard.styled.js","components/Review/ReviewItem.jsx","components/Review/ReviewCard.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9e618eee0b448f62a9e21dcfe5288ef5';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport async function fetchMoviesTrending() {\n  return await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n}\n\nexport async function fetchSearchMovies(movieName) {\n  return await axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movieName}&page=1`\n  );\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  return await axios(\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  return await axios(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  return await axios(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n","import styled from 'styled-components';\n\nexport const Text = styled.span`\n  padding-left: 20px;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n`;\n","import React from 'react';\nexport default function ReviewItem({ key, author, content }) {\n  return (\n    <li key={key}>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </li>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Text } from './ReviewCard.styled.js';\nimport ReviewItem from './ReviewItem.jsx';\n\nexport default function ReviewCard({ reviews }) {\n  return reviews.length > 0 ? (\n    <>\n      <ul>\n        {reviews.map(review => (\n          <ReviewItem\n            key={review.id}\n            author={review.author}\n            content={review.content}\n          />\n        ))}\n      </ul>\n    </>\n  ) : (\n    <Text>We don't have any review for this movie</Text>\n  );\n}\n\nReviewCard.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from '../api/api.js';\nimport { useParams } from 'react-router-dom';\nimport ReviewCard from '../components/Review/ReviewCard';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(res => {\n      setReviews(res.data.results);\n    });\n  }, [movieId]);\n\n  return <>{reviews && <ReviewCard reviews={reviews} />}</>;\n}\n"],"names":["API_KEY","BASE_URL","fetchMoviesTrending","axios","fetchSearchMovies","movieName","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","Text","styled","ReviewItem","key","author","content","ReviewCard","reviews","length","map","review","id","Reviews","movieId","useParams","useState","setReviews","useEffect","then","res","data","results"],"sourceRoot":""}