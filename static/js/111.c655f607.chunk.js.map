{"version":3,"file":"static/js/111.c655f607.chunk.js","mappings":"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","sources":["api/api.js","components/SearchMovie/SearchMovieItem.jsx","components/SearchMovie/SearchMovies.styled.js","components/SearchMovie/SearchMovies.jsx","components/FormSearchMovie/Form.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '9e618eee0b448f62a9e21dcfe5288ef5';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`/movie/${moviesId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByKeyWord = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n","import React from 'react';\nimport { useLocation, NavLink } from 'react-router-dom';\nfunction SearchMovieItem({ id, original_title }) {\n  const location = useLocation();\n  return (\n    <li key={id}>\n      <NavLink to={`${id}`} state={{ from: location }}>\n        {original_title}\n      </NavLink>\n    </li>\n  );\n}\nexport default SearchMovieItem;\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  margin-top: 15px;\n`;\n","import SearchMovieItem from './SearchMovieItem';\nimport { MovieList } from './SearchMovies.styled.js';\n\nexport default function SearchMovies({ movies }) {\n  return (\n    <MovieList>\n      {movies.map(({ id, original_title }) => (\n        <SearchMovieItem key={id} id={id} original_title={original_title} />\n      ))}\n    </MovieList>\n  );\n}\n","import { useState } from 'react';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Form({ setSearchParams }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    const form = e.currentTarget;\n    e.preventDefault();\n    if (searchQuery.toLowerCase().trim() === '') {\n      return toast.info('Please enter movie name ');\n    }\n    setSearchParams({ query: form.elements.query.value });\n    setSearchQuery('');\n  };\n\n  const input = {\n    paddingLeft: 20,\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\" style={input}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          onChange={handleChange}\n          value={searchQuery}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMovieByKeyWord } from '../api/api.js';\nimport SearchMovies from '../components/SearchMovie/SearchMovies';\n\nimport Form from '../components/FormSearchMovie/Form';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n    setStatus(Status.PENDING);\n\n    const fetchMovie = async () => {\n      try {\n        const getMovies = await getMovieByKeyWord(query);\n\n        if (getMovies.length === 0) {\n          setStatus(Status.IDLE);\n          return toast.warning(` ${query} not found :( `);\n        }\n\n        setStatus(Status.RESOLVED);\n        setMovies(getMovies);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        return toast.error(`Whoops something went wrong...`);\n      }\n    };\n    fetchMovie();\n  }, [query]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {status === Status.RESOLVED && (\n        <SearchMovies movies={movies} location={location} />\n      )}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","getMoviesById","moviesId","getMovieCast","cast","getMovieReviews","getMovieByKeyWord","searchQuery","id","original_title","location","useLocation","to","state","from","MovieList","styled","SearchMovies","movies","map","Form","setSearchParams","useState","setSearchQuery","onSubmit","e","form","currentTarget","preventDefault","toLowerCase","trim","toast","query","elements","value","autoComplete","style","paddingLeft","type","name","onChange","Status","setMovies","status","setStatus","useSearchParams","searchParams","get","useEffect","fetchMovie","getMovies","length"],"sourceRoot":""}